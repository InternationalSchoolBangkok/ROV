/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rov;

import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author 15998
 */
public class Interface extends javax.swing.JFrame {

    private Worker worker;

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
        worker = new Worker(this,x, y, z, rz, cam1View);
        worker.start();
        cam1View.setSize(1000, 1000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        y = new javax.swing.JLabel();
        z = new javax.swing.JLabel();
        rz = new javax.swing.JLabel();
        cam1View = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jLabel1.setText("X-Analog:");

        jLabel2.setText("Y-Analog:");

        jLabel3.setText("Z-Analog:");

        jLabel4.setText("RZ-Analog:");

        x.setText("HUE");

        y.setText("HUE");

        z.setText("HUE");

        rz.setText("HUE");

        cam1View.setPreferredSize(new java.awt.Dimension(0, 0));
        cam1View.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                cam1ViewComponentResized(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rz)
                            .addComponent(y)
                            .addComponent(x)
                            .addComponent(z))))
                .addContainerGap(197, Short.MAX_VALUE))
            .addComponent(cam1View, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(x, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(y))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(z))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(cam1View, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cam1ViewComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cam1ViewComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_cam1ViewComponentResized

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here: 
        cam1View.setPreferredSize(new Dimension(200, 200));
        cam1View.repaint();
        worker.setImageScale(getWidth(), getHeight());
    }//GEN-LAST:event_formComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cam1View;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel rz;
    private javax.swing.JLabel x;
    private javax.swing.JLabel y;
    private javax.swing.JLabel z;
    // End of variables declaration//GEN-END:variables
}

class Worker extends Thread {

    private final javax.swing.JLabel rz;
    private final javax.swing.JLabel x;
    private final javax.swing.JLabel y;
    private final javax.swing.JLabel z;
    private final javax.swing.JLabel cam1View;
    private final javax.swing.JFrame jf;
    float[] cData;
    private ImageIcon imageIcon;
    int cam1width, cam1height;

    public Worker(javax.swing.JFrame jf, JLabel x, JLabel y, JLabel z, JLabel rz, JLabel cam1View) {
        this.jf = jf;
        this.x = x;
        this.y = y;
        this.z = z;
        this.rz = rz;
        this.cam1View = cam1View;
    }

    public void setImageScale(int screenWidth, int screenHeight) {
        cam1width = screenWidth;
        cam1height = (int) ((float) cam1width * 0.65);
    }

    @Override
    public void run() {
        int i = 0;
        while (true) {
            try {
                Control control = new Control();
                control.poll();
                cData = control.getComponentsData();
            } catch (Exception e) {
                //System.out.println("Control Exception: " + e);
                JOptionPane.showMessageDialog(jf, "Could not connect to control: " + e);
            }
            try {
                BufferedImage myPicture = ImageIO.read(new URL("http://192.168.2.2/cam_pic.php?t=\"" + i));
                myPicture = resize(myPicture, cam1width, cam1height);
                imageIcon = new ImageIcon(myPicture);
                updateUI();
            } catch (IOException ioe) {
                //System.out.println("Video Exception: "+ioe);
                JOptionPane.showMessageDialog(jf, "Could not get video: " + ioe);
            }
            try {
                Thread.sleep(50);
            } catch (InterruptedException ex) {
                Logger.getLogger(Worker.class.getName()).log(Level.SEVERE, null, ex);
            }
            i++;
        }
    }

    public static BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }

    private void updateUI() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                x.setText("" + cData[0]);
                y.setText("" + cData[1]);
                z.setText("" + cData[2]);
                rz.setText("" + cData[3]);
                cam1View.setIcon(imageIcon);
            }
        });
    }
}
